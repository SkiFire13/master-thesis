@article{mucalculus,
  title = {Results on the propositional μ-calculus},
  journal = {Theoretical Computer Science},
  volume = {27},
  number = {3},
  pages = {333-354},
  year = {1983},
  note = {Special Issue Ninth International Colloquium on Automata, Languages and Programming (ICALP) Aarhus, Summer 1982},
  issn = {0304-3975},
  doi = {https://doi.org/10.1016/0304-3975(82)90125-6},
  url = {https://www.sciencedirect.com/science/article/pii/0304397582901256},
  author = {Dexter Kozen},
  abstract = {In this paper we define and study a propositional μ-calculus Lμ, which consists essentially of propositional modal logic with a least fixpoint operator. Lμ is syntactically simpler yet strictly more expressive than Propositional Dynamic Logic (PDL). For a restricted version we give an exponential-time decision procedure, small model property, and complete deductive system, theory subsuming the corresponding results for PDL.}
}

@book{bisimilarity,
  author = {Sangiorgi, Davide},
  title = {Introduction to Bisimulation and Coinduction},
  year = {2011},
  isbn = {1107003636},
  publisher = {Cambridge University Press},
  address = {USA},
  abstract = {Induction is a pervasive tool in computer science and mathematics for defining objects and reasoning on them. Coinduction is the dual of induction and as such it brings in quite different tools. Today, it is widely used in computer science, but also in other fields, including artificial intelligence, cognitive science, mathematics, modal logics, philosophy and physics. The best known instance of coinduction is bisimulation, mainly employed to define and prove equalities among potentially infinite objects: processes, streams, non-well-founded sets, etc. This book presents bisimulation and coinduction: the fundamental concepts and techniques and the duality with induction. Each chapter contains exercises and selected solutions, enabling students to connect theory with practice. A special emphasis is placed on bisimulation as a behavioural equivalence for processes. Thus the book serves as an introduction to models for expressing processes (such as process calculi) and to the associated techniques of operational and algebraic analysis.}
}

@article{lukamucalculus,
  author = {Matteo Mio and Alex K. Simpson},
  title = {{\L}ukasiewicz (μ)-calculus},
  journal = {CoRR},
  volume = {abs/1510.00797},
  year = {2015},
  url= {http://arxiv.org/abs/1510.00797},
  eprinttype = {arXiv},
  eprint = {1510.00797},
  timestamp = {Mon, 13 Aug 2018 16:48:35 +0200},
  biburl = {https://dblp.org/rec/journals/corr/MioS15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{abstractinterpretation,
  author = {Cousot, Patrick and Cousot, Radhia},
  title = {Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints},
  year = {1977},
  isbn = {9781450373500},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/512950.512973},
  doi = {10.1145/512950.512973},
  abstract = {A program denotes computations in some universe of objects. Abstract interpretation of programs consists in using that denotation to describe computations in another universe of abstract objects, so that the results of abstract execution give some information on the actual computations. An intuitive example (which we borrow from Sintzoff [72]) is the rule of signs. The text -1515 * 17 may be understood to denote computations on the abstract universe {(+), (-), (±)} where the semantics of arithmetic operators is defined by the rule of signs. The abstract execution -1515 * 17 → -(+) * (+) → (-) * (+) → (-), proves that -1515 * 17 is a negative number. Abstract interpretation is concerned by a particular underlying structure of the usual universe of computations (the sign, in our example). It gives a summary of some facets of the actual executions of a program. In general this summary is simple to obtain but inaccurate (e.g. -1515 + 17 → -(+) + (+) → (-) + (+) → (±)). Despite its fundamentally incomplete results abstract interpretation allows the programmer or the compiler to answer questions which do not need full knowledge of program executions or which tolerate an imprecise answer, (e.g. partial correctness proofs of programs ignoring the termination problems, type checking, program optimizations which are not carried in the absence of certainty about their feasibility, …).},
  booktitle = {Proceedings of the 4th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
  pages = {238–252},
  numpages = {15},
  location = {Los Angeles, California},
  series = {POPL '77}
}

@mastersthesis{flori,
  author = {Alessandro Flori},
  school = {Università degli studi di Padova},
  title = {A Local Algorithm for Systems of Fixpoint Equations: Study and Implementation},
  year = {2022},
  type = {Master's thesis},
  school = {Università di Padova},
  url = {https://hdl.handle.net/20.500.12608/61406}
}

@article{baldan_games,
  author = {Paolo Baldan and Barbara K{\"{o}}nig and Tommaso Padoan and Christina Mika{-}Michalski},
  title = {Fixpoint Games on Continuous Lattices},
  journal = {CoRR},
  volume = {abs/1810.11404},
  year = {2018},
  url = {http://arxiv.org/abs/1810.11404},
  eprinttype = {arXiv},
  eprint = {1810.11404},
  timestamp = {Wed, 31 Oct 2018 14:24:29 +0100},
  biburl = {https://dblp.org/rec/journals/corr/abs-1810-11404.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{tarski,
  author = {Alfred Tarski},
  title = {A lattice-theoretical fixpoint theorem and its applications.},
  volume = {5},
  journal = {Pacific Journal of Mathematics},
  number = {2},
  publisher = {Pacific Journal of Mathematics, A Non-profit Corporation},
  pages = {285 -- 309},
  year = {1955},
}

@article{kleene,
  author = {Patrick Cousot and Radhia Cousot},
  title = {{Constructive versions of Tarski's fixed point theorems.}},
  volume = {82},
  journal = {Pacific Journal of Mathematics},
  number = {1},
  publisher = {Pacific Journal of Mathematics, A Non-profit Corporation},
  pages = {43 -- 57},
  year = {1979},
}

@article{baldan_upto,
  ids = {baldan_upto},
  author = {Paolo Baldan and Barbara K{\"{o}}nig and Tommaso Padoan},
  title = {Abstraction, Up-to Techniques and Games for Systems of Fixpoint Equations},
  journal = {CoRR},
  volume = {abs/2003.08877},
  year = {2020},
  url = {https://arxiv.org/abs/2003.08877},
  eprinttype = {arXiv},
  eprint = {2003.08877},
  timestamp = {Tue, 24 Mar 2020 16:42:29 +0100},
  biburl = {https://dblp.org/rec/journals/corr/abs-2003-08877.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  doi = {10.48550/arXiv.2003.08877},
}

@inproceedings{pg_ermeson,
  author = {E. Allen Emerson and Charanjit S. Jutla},
  title = {Tree Automata, Mu-Calculus and Determinacy (Extended Abstract)},
  booktitle = {32nd Annual Symposium on Foundations of Computer Science, San Juan, Puerto Rico, 1-4 October 1991},
  pages = {368--377},
  publisher = {{IEEE} Computer Society},
  year = {1991},
  url = {https://doi.org/10.1109/SFCS.1991.185392},
  doi = {10.1109/SFCS.1991.185392},
  timestamp = {Thu, 23 Mar 2023 23:57:52 +0100},
  biburl = {https://dblp.org/rec/conf/focs/EmersonJ91.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{pg_zielonka,
  title = {Infinite games on finitely coloured graphs with applications to automata on infinite trees},
  journal = {Theoretical Computer Science},
  volume = {200},
  number = {1},
  pages = {135-183},
  year = {1998},
  issn = {0304-3975},
  doi = {https://doi.org/10.1016/S0304-3975(98)00009-7},
  url = {https://www.sciencedirect.com/science/article/pii/S0304397598000097},
  author = {Wieslaw Zielonka},
  keywords = {Infinite games, Infinite trees, Rabin complementation lemma}
}

@InProceedings{jurdzinski_improvement,
  author = {V{\"o}ge, Jens and Jurdzi{\'{n}}ski, Marcin},
  editor = {Emerson, E. Allen and Sistla, Aravinda Prasad},
  title = {A Discrete Strategy Improvement Algorithm for Solving Parity Games},
  booktitle = {Computer Aided Verification},
  year = {2000},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  pages = {202--215},
  doi = {10.1007/10722167_18},
}

@article{friedmann_local,
  author = {FRIEDMANN, OLIVER and LANGE, MARTIN},
  title = {TWO LOCAL STRATEGY ITERATION SCHEMES FOR PARITY GAME SOLVING},
  journal = {International Journal of Foundations of Computer Science},
  volume = {23},
  number = {03},
  pages = {669-685},
  year = {2012},
  doi = {10.1142/S0129054112400333},
  URL = {https://doi.org/10.1142/S0129054112400333},
  eprint = {https://doi.org/10.1142/S0129054112400333},
}

@misc{rust,
  title = {Rust programming language},
  url = {https://www.rust-lang.org/}
}

@misc{pgsolver,
  title = {PGSOLVER},
  url = {https://github.com/tcsprojects/pgsolver}
}

@misc{oink,
  title = {Oink},
  url = {https://github.com/trolando/oink}
}

@misc{aut_spec,
  title = {AUT format specification},
  url = {https://cadp.inria.fr/man/aut.html}
}

@misc{vlts,
  title = {CADP's VLTS benchmark suite},
  url = {https://cadp.inria.fr/resources/vlts/}
}

@misc{bisimilaritymlogn,
  title = {A simpler O(m log n) algorithm for branching bisimilarity on labelled transition systems}, 
  author = {David N. Jansen and Jan Friso Groote and Jeroen J. A. Keiren and Anton Wijs},
  year = {2019},
  eprint = {1909.10824},
  archivePrefix = {arXiv},
  primaryClass = {cs.LO},
  url = {https://arxiv.org/abs/1909.10824}, 
}

@inproceedings{firstquasipoly,
  author = {Calude, Cristian S. and Jain, Sanjay and Khoussainov, Bakhadyr and Li, Wei and Stephan, Frank},
  title = {Deciding parity games in quasipolynomial time},
  year = {2017},
  isbn = {9781450345286},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3055399.3055409},
  doi = {10.1145/3055399.3055409},
  abstract = {It is shown that the parity game can be solved in quasipolynomial time. The parameterised parity game - with n nodes and m distinct values (aka colours or priorities) - is proven to be in the class of fixed parameter tractable (FPT) problems when parameterised over m. Both results improve known bounds, from runtime nO(√n) to O(nlog(m)+6) and from an XP-algorithm with runtime O(nΘ(m)) for fixed parameter m to an FPT-algorithm with runtime O(n5)+g(m), for some function g depending on m only. As an application it is proven that coloured Muller games with n nodes and m colours can be decided in time O((mm · n)5); it is also shown that this bound cannot be improved to O((2m · n)c), for any c, unless FPT = W[1].},
  booktitle = {Proceedings of the 49th Annual ACM SIGACT Symposium on Theory of Computing},
  pages = {252–263},
  numpages = {12},
  keywords = {Quasipolynomial Time Algorithm, Parity Games, Muller Games},
  location = {Montreal, Canada},
  series = {STOC 2017}
}

@misc{zielonkaquasipoly,
  title = {Parity Games: Zielonka's Algorithm in Quasi-Polynomial Time}, 
  author = {Paweł Parys},
  year = {2019},
  eprint = {1904.12446},
  archivePrefix = {arXiv},
  primaryClass = {cs.FL},
  url = {https://arxiv.org/abs/1904.12446}, 
}

@article{parity_to_fixpoint,
  title = {Monadic second-order logic on tree-like structures},
  journal = {Theoretical Computer Science},
  volume = {275},
  number = {1},
  pages = {311-346},
  year = {2002},
  issn = {0304-3975},
  doi = {https://doi.org/10.1016/S0304-3975(01)00185-2},
  url = {https://www.sciencedirect.com/science/article/pii/S0304397501001852},
  author = {Igor Walukiewicz},
  keywords = {Monadic second-order logic, Tree automata, Decidability},
  abstract = {An operation M∗ which constructs from a given structure M a tree-like structure whose domain consists of the finite sequences of elements of M is considered. A notion of automata running on such tree-like structures is defined. It is shown that automata of this kind characterise expressive power of monadic second-order logic (MSOL) over tree-like structures. Using this characterisation it is proved that MSOL theory of a tree-like structure is effectively reducible to that of the original structure. As another application of the characterisation it is shown that MSOL on trees of arbitrary degree is equivalent to first-order logic extended with unary least fixpoint operator.}
}